"0","dat1$Criteria[dat1$Criteria == ""Effectiveness to mimise impacts from warming (T1a or T1b with T2)""] <-  ""OW"""
"0","dat1$Criteria[dat1$Criteria == ""Effectiveness to mimise impacts from ocean acidification (T1a or T1b with T2)""] <-  ""OA"""
"0","dat1$Criteria[dat1$Criteria == ""Effectiveness to mimise impacts from sea level rise (T1a or T1b with T2)""] <-  ""SLR"""
"0","# Next three rows (need to extract scores)"
"0","dat2 <- read_xlsx(""../../interim_documents/backups_google_docs/Ocean Solutions Tables_2017-05-13d.xlsx"","
"0","                 skip=17, n_max = 75, trim_ws = TRUE,"
"0","                 sheet = ""T3_Systems-Ocean"", col_names = TRUE,"
"0","                 col_types = ""text"") %>%"
"0","  dplyr::select(-`Assessment guidance`) %>%"
"0","  dplyr::filter(grepl(""other drivers|co-benefits|Unintended consequences"", Criteria)) %>%"
"0","  mutate_each(funs(substr(., 1, 1)), 3:18) %>%"
"0","  mutate_each(funs(as.integer), 3:18)"
"0","colnames(dat2) <- c(""Category"", ""Criteria"", ""Renewables"", ""Vegetation (g)"", ""Productivity"","
"0","                   ""Alkalinity (g)"",""Others"", ""Cloud"", ""Albedo"", ""Alkalinity (l)"","
"0","                   ""Vegetation (l)"", ""Pollutants"", ""Hydrology"", ""Overexploitation"","
"0","                   ""Protection"", ""Invasion"", ""Evolution"","
"0","                   ""Relocation & Restoration"")"
"0","dat2$Criteria[dat2$Criteria == ""Effectiveness of solution to reduce impacts on an ecosystem by reducing other drivers (=previous effectiveness)""] <-  ""Other\ndrivers"""
"0","dat2$Criteria[dat2$Criteria == ""Importance of co-benefits on function and services of this habitat (=previous criterion)""] <-  ""Co-benefits"""
"0","dat2$Criteria[dat2$Criteria == ""Unintended consequences  (0 loss of benefits or negative impact, >0 some benefits remain, 5 all benefits remain)""] <-  ""Unintended\nconsequences"""
"0","#  tidyr::separate(data = dat2, col = Renewables, into = c(""A"", ""B""), "
"0","#                sep = ""("")"
"0","# bind and long form"
"0","dat <- rbind(dat1, dat2)"
"0","dat_long <- gather(data = dat, key = Solution, value = score, 3:18) %>%"
"0","  dplyr::mutate(Solution = factor(Solution, levels = unique(as.character(Solution))))"
